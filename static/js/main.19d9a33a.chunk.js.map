{"version":3,"sources":["Components/feedback/feedbackOptions/FeedbackOptions.js","Components/feedback/statistics/notification/Notification.js","Components/feedback/statistics/Statistics.js","Components/section/Section.js","Components/App.js","index.js"],"names":["FeedbackOptions","options","onBtnClick","type","name","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","target","setState","prev","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAkBeA,EAhBS,SAAC,GAA4B,EAA1BC,QAA2B,IAAlBC,EAAiB,EAAjBA,WAClC,OACE,gCACE,wBAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,qBCLSI,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCkBEC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACKD,EACD,qCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcN,QAAS,yBCJhBO,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCDDC,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,mBAAqB,WACnB,OAAO,EAAKD,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAG3DS,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKJ,MAAMT,KAAO,EAAKU,qBAAwB,M,EAGpEjB,WAAa,SAACqB,GACZ,IAAMnB,EAAOmB,EAAMC,OAAOpB,KAC1B,EAAKqB,UAAS,SAACC,GAAD,sBACXtB,EAAOsB,EAAKtB,GAAQ,O,4CAGzB,WACE,OACE,qCACE,cAAC,EAAD,CAASW,MAAM,iBAAf,SACE,cAAC,EAAD,CAAiBd,QAAS0B,KAAKT,MAAOhB,WAAYyB,KAAKzB,eAEzD,cAAC,EAAD,CAASa,MAAM,aAAf,SACE,cAAC,EAAD,CACEN,KAAMkB,KAAKT,MAAMT,KACjBC,QAASiB,KAAKT,MAAMR,QACpBC,IAAKgB,KAAKT,MAAMP,IAChBC,MAAOe,KAAKR,qBACZN,mBAAoBc,KAAKP,6C,GAjCnBQ,aAyCHX,I,MCzCfY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.19d9a33a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onBtnClick }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" name=\"good\" onClick={onBtnClick}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={onBtnClick}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"bad\" onClick={onBtnClick}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"./notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {!!total ? (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n      ) : (\r\n        <Notification message={\"No feedback given\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./feedback/feedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"./feedback/statistics/Statistics\";\r\nimport Section from \"./section/Section\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  onBtnClick = (event) => {\r\n    const name = event.target.name;\r\n    this.setState((prev) => ({\r\n      [name]: prev[name] + 1,\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Leave feedback\">\r\n          <FeedbackOptions options={this.state} onBtnClick={this.onBtnClick} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}